<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.blog.mapper.SubjectMapper">

    <resultMap type="Subject" id="SubjectResult">
        <result property="subjectId" column="subject_id"/>
        <result property="name" column="name"/>
        <result property="summary" column="summary"/>
        <result property="images" column="images"/>
        <result property="icon" column="icon"/>
        <result property="clickCount" column="click_count"/>
        <result property="collectCount" column="collect_count"/>
        <result property="sort" column="sort"/>
        <result property="status" column="status"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
        <result property="createBy" column="create_by"/>
        <result property="updateBy" column="update_by"/>
        <result property="remark" column="remark"/>
    </resultMap>

    <resultMap id="SubjectArticleSubjectResult" type="Subject" extends="SubjectResult">
        <collection property="articleSubjectList" notNullColumn="sub_article_suject_id" javaType="java.util.List"
                    resultMap="ArticleSubjectResult"/>
    </resultMap>

    <resultMap type="ArticleSubject" id="ArticleSubjectResult">
        <result property="articleSujectId" column="sub_article_suject_id"/>
        <result property="subjectId" column="sub_subject_id"/>
        <result property="articleId" column="sub_article_id"/>
        <result property="status" column="sub_status"/>
        <result property="sort" column="sub_sort"/>
        <result property="createTime" column="sub_create_time"/>
        <result property="updateTime" column="sub_update_time"/>
        <result property="createBy" column="sub_create_by"/>
        <result property="updateBy" column="sub_update_by"/>
        <result property="remark" column="sub_remark"/>
    </resultMap>

    <sql id="selectSubjectVo">
        select subject_id,
               name,
               summary,
               images,
               icon,
               click_count,
               collect_count,
               sort,
               status,
               create_time,
               update_time,
               create_by,
               update_by,
               remark
        from blog_subject
    </sql>

    <select id="selectSubjectList" parameterType="Subject" resultMap="SubjectResult">
        <include refid="selectSubjectVo"/>
        <where>
            <if test="name != null  and name != ''">and name like concat('%', #{name}, '%')</if>
            <if test="summary != null  and summary != ''">and summary like concat('%', #{summary}, '%')</if>
            <if test="status != null ">and status = #{status}</if>
        </where>
    </select>

    <select id="selectSubjectBySubjectId" parameterType="Long" resultMap="SubjectArticleSubjectResult">
        select a.subject_id,
               a.name,
               a.summary,
               a.images,
               a.icon,
               a.click_count,
               a.collect_count,
               a.sort,
               a.status,
               a.create_time,
               a.update_time,
               a.create_by,
               a.update_by,
               a.remark,
               b.article_suject_id as sub_article_suject_id,
               b.subject_id        as sub_subject_id,
               b.article_id        as sub_article_id,
               b.status            as sub_status,
               b.sort              as sub_sort,
               b.create_time       as sub_create_time,
               b.update_time       as sub_update_time,
               b.create_by         as sub_create_by,
               b.update_by         as sub_update_by,
               b.remark            as sub_remark
        from blog_subject a
                 left join blog_article_subject b on b.subject_id = a.subject_id
        where a.subject_id = #{subjectId}
    </select>

    <delete id="deleteSubjectBySubjectIds" parameterType="String">
        delete from blog_subject where subject_id in
        <foreach item="subjectId" collection="array" open="(" separator="," close=")">
            #{subjectId}
        </foreach>
    </delete>

    <delete id="deleteArticleSubjectBySubjectIds" parameterType="String">
        delete from blog_article_subject where subject_id in
        <foreach item="subjectId" collection="array" open="(" separator="," close=")">
            #{subjectId}
        </foreach>
    </delete>

    <delete id="deleteArticleSubjectBySubjectId" parameterType="Long">
        delete
        from blog_article_subject
        where subject_id = #{subjectId}
    </delete>

    <insert id="batchArticleSubject">
        insert into blog_article_subject( article_suject_id, subject_id, article_id, status, sort, create_time,
        update_time, create_by, update_by, remark) values
        <foreach item="item" index="index" collection="list" separator=",">
            ( #{item.articleSujectId}, #{item.subjectId}, #{item.articleId}, #{item.status}, #{item.sort},
            #{item.createTime}, #{item.updateTime}, #{item.createBy}, #{item.updateBy}, #{item.remark})
        </foreach>
    </insert>
</mapper>
